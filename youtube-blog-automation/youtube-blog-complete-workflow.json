{
  "name": "YouTube Blog Complete Final",
  "nodes": [
    {
      "parameters": {
        "path": "youtube-blog-complete-final",
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "id": "webhook-trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [240, 300],
      "webhookId": "youtube-blog-complete-final"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.pageId }}"
        }
      },
      "id": "notion-get-page",
      "name": "Get Notion Page",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [460, 300],
      "credentials": {
        "notionApi": {
          "id": "kCKFfrau35Gf4PvW",
          "name": "이미커피 Notion API"
        }
      }
    },
    {
      "parameters": {
        "language": "javaScript",
        "mode": "runOnceForAllItems",
        "jsCode": "// YouTube URL에서 videoId와 기타 정보 추출\nconst items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // Notion 페이지 데이터에서 YouTube URL 추출\n  let youtubeUrl = '';\n  let title = '';\n  let channelName = '';\n  let videoId = '';\n  \n  // Notion 페이지 속성에서 YouTube URL 찾기\n  if (data.properties) {\n    // URL 속성에서 YouTube URL 추출\n    if (data.properties.URL && data.properties.URL.url) {\n      youtubeUrl = data.properties.URL.url;\n    } else if (data.properties.urlValue && data.properties.urlValue.url) {\n      youtubeUrl = data.properties.urlValue.url;\n    }\n    \n    // 제목 추출\n    if (data.properties.title && data.properties.title.title && data.properties.title.title.length > 0) {\n      title = data.properties.title.title[0].plain_text;\n    } else if (data.properties.Name && data.properties.Name.title && data.properties.Name.title.length > 0) {\n      title = data.properties.Name.title[0].plain_text;\n    }\n    \n    // 채널명 추출\n    if (data.properties.textContent && data.properties.textContent.rich_text && data.properties.textContent.rich_text.length > 0) {\n      channelName = data.properties.textContent.rich_text[0].plain_text;\n    } else if (data.properties.Channel && data.properties.Channel.rich_text && data.properties.Channel.rich_text.length > 0) {\n      channelName = data.properties.Channel.rich_text[0].plain_text;\n    }\n  }\n  \n  // YouTube URL에서 video ID 추출\n  if (youtubeUrl) {\n    const urlRegex = /(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n    const match = youtubeUrl.match(urlRegex);\n    if (match && match[1]) {\n      videoId = match[1];\n    }\n  }\n  \n  // 결과 객체 생성\n  const result = {\n    json: {\n      videoId: videoId,\n      youtubeUrl: youtubeUrl,\n      title: title,\n      channelName: channelName,\n      originalData: data\n    }\n  };\n  \n  results.push(result);\n}\n\nreturn results;"
      },
      "id": "extract-youtube-info",
      "name": "Extract YouTube Info",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "=https://api.supadata.ai/v1/youtube/transcript?videoId={{ $json.videoId }}",
        "method": "GET",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "youtube-transcript",
      "name": "YouTube Transcript",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 300],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "text",
        "operation": "message",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gemini-1.5-pro"
        },
        "prompt": "=당신은 이미커피 대표 hovoo입니다. 15년간 카페를 운영하며 브랜딩과 AI 자동화 전문성을 키워온 경험 많은 사업가입니다. 현재 GPTers 커뮤니티에서 \"AI 감성 브랜딩 시스템\" 스터디를 운영하며, 자영업자들에게 AI 활용법을 가르치고 있습니다.\n\n아래 YouTube 영상의 자막을 바탕으로, hovoo의 관점에서 블로그 글을 작성해주세요:\n\n**영상 정보:**\n- 제목: {{ $('Extract YouTube Info').first().json.title }}\n- 채널: {{ $('Extract YouTube Info').first().json.channelName }}\n- URL: {{ $('Extract YouTube Info').first().json.youtubeUrl }}\n\n**자막 내용:**\n{{ $json.content ? $json.content.map(item => `[${Math.floor(item.offset/1000)}초] ${item.text}`).join('\\n') : '자막을 가져오지 못했습니다.' }}\n\n**작성 가이드라인:**\n\n1. **hovoo의 정체성 유지**\n   - 15년 카페 운영 경험 활용\n   - AI 자동화 전문가로서의 인사이트\n   - 실용적이고 따뜻한 어조\n   - 오프라인 비즈니스 × AI 융합 관점\n\n2. **글 구조 (최소 2500자)**\n   - 인사말과 영상 소개\n   - 주요 내용 3-4가지 포인트로 정리\n   - 각 포인트마다 hovoo의 경험과 연결\n   - 실무 적용 방안 제시\n   - 마무리와 독자들을 위한 조언\n\n3. **톤앤매너**\n   - \"안녕하세요, 이미커피 hovoo입니다\" 시작\n   - 존댓말 사용\n   - 구체적인 사례와 경험 언급\n   - AI 도구와 자동화에 대한 실용적 조언\n   - 따뜻하고 격려하는 마무리\n\n4. **형식**\n   - 마크다운 형식\n   - 적절한 소제목 구성\n   - 읽기 쉬운 단락 구성\n\n영상 내용을 hovoo의 경험과 융합하여, 독자들에게 실질적인 도움이 되는 블로그 글로 재탄생시켜 주세요.",
        "options": {
          "temperature": 0.7,
          "maxTokens": 4000
        }
      },
      "id": "generate-blog-content",
      "name": "Generate Blog Content",
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [1120, 300],
      "credentials": {
        "googleGeminiApi": {
          "id": "SO4eLSfcE2Z5kkss",
          "name": "Google Gemini API"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "create",
        "databaseId": {
          "__rl": true,
          "mode": "id",
          "value": "251d0f53623d8158b023d994a1e58122"
        },
        "title": "={{ $('Extract YouTube Info').first().json.title + ' - 블로그 포스트' }}",
        "properties": {
          "properties": [
            {
              "key": "title",
              "title": "={{ $('Extract YouTube Info').first().json.title }}"
            },
            {
              "key": "urlValue",
              "url": "={{ $('Extract YouTube Info').first().json.youtubeUrl }}"
            },
            {
              "key": "textContent",
              "richText": [
                {
                  "text": "={{ $('Extract YouTube Info').first().json.channelName }}"
                }
              ]
            },
            {
              "key": "본문",
              "richText": [
                {
                  "text": "={{ $json.text.length > 2000 ? $json.text.substring(0, 2000) + '...' : $json.text }}"
                }
              ]
            },
            {
              "key": "태그",
              "multiSelect": [
                "이미커피",
                "hovoo", 
                "YouTube",
                "블로그",
                "AI자동화"
              ]
            },
            {
              "key": "상태",
              "select": "발행완료"
            }
          ]
        }
      },
      "id": "save-to-notion",
      "name": "Save to Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [1340, 300],
      "credentials": {
        "notionApi": {
          "id": "kCKFfrau35Gf4PvW",
          "name": "이미커피 Notion API"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMessage",
        "chatId": "7830356405",
        "text": "=🎉 YouTube → 블로그 변환 완료!\n\n📺 **영상**: {{ $('Extract YouTube Info').first().json.title }}\n📺 **채널**: {{ $('Extract YouTube Info').first().json.channelName }}\n🔗 **URL**: {{ $('Extract YouTube Info').first().json.youtubeUrl }}\n\n✅ **작업 완료**:\n- 자막 추출: {{ $('YouTube Transcript').first().json ? '성공' : '실패' }}\n- AI 블로그 생성: 완료\n- Notion 데이터베이스 저장: 완료\n\n📝 **생성된 콘텐츠 길이**: {{ $('Generate Blog Content').first().json.text ? $('Generate Blog Content').first().json.text.length + '자' : 'N/A' }}\n\n✨ hovoo의 관점에서 {{ $('Extract YouTube Info').first().json.channelName }} 영상을 완벽하게 블로그로 변환했습니다!\n\n💡 이미커피 AI 자동화 시스템이 또 하나의 콘텐츠를 탄생시켰네요! 🚀"
      },
      "id": "telegram-notification",
      "name": "Telegram Notification",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1560, 300],
      "credentials": {
        "telegramApi": {
          "id": "hIo5i77YKdu9Rs8g",
          "name": "텔레그램 봇"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"YouTube 영상이 성공적으로 블로그 포스트로 변환되었습니다\",\n  \"data\": {\n    \"videoId\": \"{{ $('Extract YouTube Info').first().json.videoId }}\",\n    \"title\": \"{{ $('Extract YouTube Info').first().json.title }}\",\n    \"channel\": \"{{ $('Extract YouTube Info').first().json.channelName }}\",\n    \"youtubeUrl\": \"{{ $('Extract YouTube Info').first().json.youtubeUrl }}\",\n    \"transcriptSuccess\": {{ $('YouTube Transcript').first().json ? 'true' : 'false' }},\n    \"blogContentLength\": {{ $('Generate Blog Content').first().json.text ? $('Generate Blog Content').first().json.text.length : 0 }},\n    \"notionPageId\": \"{{ $('Save to Notion').first().json.id }}\",\n    \"processedAt\": \"{{ $now }}\"\n  }\n}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [1780, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Notion Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Notion Page": {
      "main": [
        [
          {
            "node": "Extract YouTube Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract YouTube Info": {
      "main": [
        [
          {
            "node": "YouTube Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Transcript": {
      "main": [
        [
          {
            "node": "Generate Blog Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Blog Content": {
      "main": [
        [
          {
            "node": "Save to Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Notion": {
      "main": [
        [
          {
            "node": "Telegram Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Notification": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "youtube-automation",
      "name": "YouTube Automation"
    },
    {
      "id": "blog-generation",
      "name": "Blog Generation"  
    },
    {
      "id": "hovoo-persona",
      "name": "hovoo Persona"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-25T10:30:00.000Z",
  "versionId": "1.0.0"
}