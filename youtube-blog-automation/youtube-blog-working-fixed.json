{
  "name": "YouTube Blog Final Working - 이미커피",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "youtube-blog-final-working",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger-final",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-592, 1680],
      "webhookId": "youtube-blog-final-working"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "value": "={{ $json.body.pageId }}",
          "mode": "id"
        }
      },
      "id": "get-notion-page-final",
      "name": "Get Video Info from Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [-384, 1680],
      "credentials": {
        "notionApi": {
          "id": "kCKFfrau35Gf4PvW",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// YouTube URL에서 video ID 추출\\nconst items = $input.all();\\nconst results = [];\\n\\nfor (const item of items) {\\n  try {\\n    // Notion 페이지에서 YouTube URL 추출\\n    let youtubeUrl = '';\\n    const properties = item.json.properties || {};\\n    \\n    if (properties.URL && properties.URL.url) {\\n      youtubeUrl = properties.URL.url;\\n    } else if (properties.url && properties.url.url) {\\n      youtubeUrl = properties.url.url;\\n    }\\n    \\n    if (!youtubeUrl) {\\n      throw new Error('YouTube URL을 찾을 수 없습니다.');\\n    }\\n    \\n    // YouTube video ID 추출\\n    let videoId = '';\\n    const match = youtubeUrl.match(/(?:youtube\\\\.com\\\\/watch\\\\?v=|youtu\\\\.be\\\\/)([^&\\\\n?#]+)/);\\n    if (match && match[1]) {\\n      videoId = match[1];\\n    }\\n    \\n    if (!videoId) {\\n      throw new Error('유효한 YouTube video ID를 추출할 수 없습니다.');\\n    }\\n    \\n    // 제목과 채널명 안전하게 추출\\n    let title = '제목 없음';\\n    if (properties.제목 && properties.제목.title && properties.제목.title[0]) {\\n      title = properties.제목.title[0].plain_text || properties.제목.title[0].text?.content || '제목 없음';\\n    } else if (properties.Name && properties.Name.title && properties.Name.title[0]) {\\n      title = properties.Name.title[0].plain_text || properties.Name.title[0].text?.content || '제목 없음';\\n    }\\n    \\n    let channelName = '채널명 없음';\\n    if (properties.채널명 && properties.채널명.rich_text && properties.채널명.rich_text[0]) {\\n      channelName = properties.채널명.rich_text[0].plain_text || properties.채널명.rich_text[0].text?.content || '채널명 없음';\\n    }\\n    \\n    results.push({\\n      ...item.json,\\n      videoId: videoId,\\n      youtubeUrl: youtubeUrl,\\n      title: title,\\n      channelName: channelName\\n    });\\n  } catch (error) {\\n    results.push({\\n      ...item.json,\\n      error: error.message,\\n      videoId: null,\\n      youtubeUrl: null,\\n      title: '오류',\\n      channelName: '오류'\\n    });\\n  }\\n}\\n\\nreturn results;"
      },
      "id": "extract-youtube-info-final",
      "name": "Extract YouTube Info",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-192, 1680]
    },
    {
      "parameters": {
        "youtubeId": "={{ $json.videoId }}",
        "preferCapLang": "ko"
      },
      "id": "get-youtube-transcript-final",
      "name": "Get YouTube Transcript",
      "type": "n8n-nodes-bandi-youtube-transcript.youtubeTranscriptNode",
      "typeVersion": 1,
      "position": [16, 1680]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=당신은 이미커피 대표 hovoo입니다.\\n\\n15년간 카페 4개 매장을 운영하며 F&B 브랜딩 전문가로 활동했습니다.\\n동시에 AI 자동화 전문가로서 GPTers 커뮤니티에서 'AI 감성 브랜딩 시스템' 스터디를 운영하고 있습니다.\\n\\nYouTube 영상 자막을 바탕으로 당신의 경험과 통찰이 담긴 블로그 글을 작성하세요.\\n\\n[영상 정보]\\n제목: {{ $('Extract YouTube Info').item.json.title }}\\n채널: {{ $('Extract YouTube Info').item.json.channelName }}\\nURL: {{ $('Extract YouTube Info').item.json.youtubeUrl }}\\nVideo ID: {{ $('Extract YouTube Info').item.json.videoId }}\\n\\n[자막 전문]\\n{{ $json.transcript }}\\n\\n[당신의 배경]\\n- 이미커피 대표, 15년 F&B 운영 경험\\n- 카페 4개 매장 + 베이커리 운영 중\\n- AI 자동화 전문가 (n8n 워크플로우 5개 운영)\\n- GPTers 스터디장, \\\"AI 감성 브랜딩 시스템\\\" 운영\\n- 자영업자 대상 AI 교육 강의\\n- 도메인: blog.imiwork.com\\n\\n[작성 스타일]\\n1. 실무 경험 기반의 구체적 통찰\\n2. 오프라인 비즈니스 × AI 융합 관점\\n3. 자영업자/소상공인을 위한 실용적 조언\\n4. 15년 카페 운영 경험에서 나오는 깊이\\n5. 친근하지만 전문적인 어투\\n6. 마크다운 형식, H1 제목 하나, H2/H3 소제목 구조화\\n7. 최소 2500자 이상의 완전한 글\\n\\n[글 구조]\\n- 도입: \\\"15년 카페를 운영하며 느낀...\\\" 식으로 경험 기반 시작\\n- 본문: 영상 내용 + 본인 경험 융합\\n- 실전 팁: F&B/AI 관점에서의 구체적 실행법\\n- 결론: 독자의 비즈니스 성장을 위한 행동 유도\\n\\n영상 내용을 단순 요약하지 말고, 당신의 15년 경험과 AI 전문성으로 재해석해서 독자에게 가치 있는 통찰을 제공하는 완전한 블로그 글을 작성하세요.",
        "batching": {}
      },
      "id": "create-article-final",
      "name": "Create Blog Article with Persona",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [240, 1680]
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {
          "maxOutputTokens": 4000,
          "temperature": 0.6
        }
      },
      "id": "gemini-article-final",
      "name": "Gemini for Article",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [128, 1904],
      "credentials": {
        "googlePalmApi": {
          "id": "SO4eLSfcE2Z5kkss",
          "name": "hovoo Google Gemini Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "251d0f53623d8158b023d994a1e58122",
          "mode": "id"
        },
        "title": "={{ $json.title + ' - 이미커피 블로그' }}",
        "simple": false,
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "원본 영상|url",
              "urlValue": "={{ $json.youtubeUrl }}"
            },
            {
              "key": "채널명|rich_text",
              "textContent": "={{ $json.channelName }}"
            },
            {
              "key": "본문|rich_text",
              "textContent": "={{ $json.text.substring(0, 2000) }}"
            },
            {
              "key": "URL 슬러그|rich_text",
              "textContent": "=imi-blog-{{ Date.now() }}"
            },
            {
              "key": "태그|multi_select",
              "multiSelectValue": "[이미커피, hovoo, YouTube, 블로그]"
            },
            {
              "key": "상태|select",
              "selectValue": "발행완료"
            },
            {
              "key": "작성일|date",
              "date": "={{ $now }}"
            }
          ]
        },
        "options": {}
      },
      "id": "save-blog-final",
      "name": "Save to Blog DB",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [384, 1680],
      "credentials": {
        "notionApi": {
          "id": "kCKFfrau35Gf4PvW",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Webhook Trigger').item.json.body.chatId || '7830356405' }}",
        "text": "=✅ **이미커피 블로그 포스트 생성 완료!**\\n\\n📝 **제목:** {{ $json.properties.제목.title[0].plain_text }}\\n🏷 **태그:** 이미커피, hovoo, YouTube, 블로그\\n\\n💾 Notion DB에 저장완료.\\n\\n🎥 **원본 영상:** {{ $('Extract YouTube Info').item.json.youtubeUrl }}\\n👨‍💼 **작성자:** hovoo (이미커피 대표)",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown",
          "reply_to_message_id": "={{ $('Webhook Trigger').item.json.body.messageId }}"
        }
      },
      "id": "send-telegram-final",
      "name": "Send Success Message",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [592, 1680],
      "webhookId": "telegram-webhook-final",
      "credentials": {
        "telegramApi": {
          "id": "hIo5i77YKdu9Rs8g",
          "name": "youtube imi Telegram account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\\n  \\\"status\\\": \\\"success\\\",\\n  \\\"message\\\": \\\"이미커피 블로그 포스트가 성공적으로 생성되었습니다.\\\",\\n  \\\"data\\\": {\\n    \\\"title\\\": \\\"{{ $('Save to Blog DB').item.json.properties.제목.title[0].plain_text }}\\\",\\n    \\\"videoId\\\": \\\"{{ $('Extract YouTube Info').item.json.videoId }}\\\",\\n    \\\"url\\\": \\\"{{ $('Extract YouTube Info').item.json.youtubeUrl }}\\\",\\n    \\\"created_at\\\": \\\"{{ $now }}\\\",\\n    \\\"webhook_path\\\": \\\"youtube-blog-final-working\\\"\\n  }\\n}",
        "options": {}
      },
      "id": "webhook-response-final",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [800, 1680]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Get Video Info from Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video Info from Notion": {
      "main": [
        [
          {
            "node": "Extract YouTube Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract YouTube Info": {
      "main": [
        [
          {
            "node": "Get YouTube Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get YouTube Transcript": {
      "main": [
        [
          {
            "node": "Create Blog Article with Persona",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Blog Article with Persona": {
      "main": [
        [
          {
            "node": "Save to Blog DB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini for Article": {
      "ai_languageModel": [
        [
          {
            "node": "Create Blog Article with Persona",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Save to Blog DB": {
      "main": [
        [
          {
            "node": "Send Success Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Success Message": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "503b3d8b44115e5921e2e4e1edcde177dde00c303a77361802e2da13d7103e31"
  }
}